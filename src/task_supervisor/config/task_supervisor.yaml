# Rate of the control loop
# Unit: hz
loop_rate: 20.0
state_topic: speed
transition_timeout: 1.0
default_linear_velocity: 0.5
default_angular_velocity: 0.5

plugins:
  - {name: mapping_handler, type: 2, class: 'task_supervisor::MappingHandler'}
  - {name: multi_session_mapping_handler, type: 20, class: 'task_supervisor::MultiSessionMappingHandler'}
  - {name: localization_handler, type: 1, class: 'task_supervisor::LocalizationHandler'}
  - {name: navigation_handler, type: 3, class: 'task_supervisor::NavigationHandler'}
  - {name: cleaning_handler, type: 4, class: 'task_supervisor::CleaningHandler'}
  - {name: human_detection_handler, type: 5, class: 'task_supervisor::HumanDetectionHandler'}
  - {name: path_handler, type: 6, class: 'task_supervisor::PathHandler'}
  - {name: pcl_slam_handler, type: 32, class: 'task_supervisor::PCLSlamHandler'}
  - {name: pcl_localization_handler, type: 31, class: 'task_supervisor::PCLLocalizationHandler'}
  - {name: wait_for_go_handler, type: 11, class: 'wait_for_go_handler::WaitForGoHandler'}
  - {name: automapping_handler, type: 7, class: 'task_supervisor::AutomappingHandler'}
  - {name: wall_inspection_handler, type: 8, class: 'task_supervisor::WallInspectionHandler'}
  - {name: rtabmap_handler, type: 9, class: 'rtabmap_handler::RtabmapHandler'}
  - {name: flexbe_handler, type: 12, class: 'task_supervisor::FlexbeHandler'}
  # - {name: docking, type: 15, class: 'external_process_handler::ExternalProcessHandler'}
  # - {name: undocking, type: 16, class: 'external_process_handler::ExternalProcessHandler'}


validation:
  loop_rate:
    min: 0.0
    max: 9999.0
  transition_timeout:
    min: 0.0
    max: 10.0

mapping_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 1000.0
  mapping_launch_package: "movel"
  mapping_launch_file: "mapping.launch"
  mapping_launch_nodes: "/slam_gmapping"
  split_map: false
  orb_slam: false
  orb_map_launch_package: "orbomator"
  orb_map_launch_file: "orb_mapping.launch"
  orb_map_launch_nodes: "/orb_slam2_ros_rgbd /map_tf_mon"
  rgbd_depth_topic: "/zed/zed_node/right/image_rect_color"                                                                                                         
  rgb_color_topic: "/zed/zed_node/left/image_rect_color"                                                                                                               
  rgbd_camera_info: "/zed/zed_node/left/camera_info"                                                                                                            
  #loop_rate: rate at which to check for cancellations, Hz
  #save_timeout: time to wait before saving of map is failed, seconds
  #map_topic: topic to read map for saving, global namespace eg "/map"

multi_session_mapping_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 1000.0
  map_topic: "/map/merged"
  mapping_launch_package: "map_merge"
  mapping_launch_file: "gmapping.launch"
  mapping_launch_nodes: "/gmapping"
  map_expander_launch_file: "map_expander.launch"
  map_expander_launch_nodes: "/map_server /intermediate_tf_publisher /map_expander"
  previous_map_dir: "/home/movel/.config/movel/maps"

localization_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0
  localization_launch_package: "movel"
  localization_launch_file: "move_base.launch"
  localization_map_dir: "/home/movel/.config/movel/maps"
  navigation_map_dir: "/home/movel/.config/movel/maps/nav"
  large_map: false
  large_map_mode: 1 # 0: full res loc, low res nav; 1: swap loc, low res nav; 2 (not implemented): swap loc, swap nav
  localization_launch_nodes: "/obs_cloud_to_scan /move_base /amcl /velocity_limiter /anti_shin_buster_node /rgbd_to_base /velocity_setter_node /plan_inspector"
  orb_slam: false
  orb_loc_launch_package: "orbomator"
  orb_loc_launch_file: "orb_localization.launch"
  orb_loc_launch_nodes: "/orb_slam2_ros_rgbd /Orbomator_Transform /orbomateur"
  rgbd_depth_topic: "/zed/zed_node/right/image_rect_color"                                                                                                         
  rgb_color_topic: "/zed/zed_node/left/image_rect_color"                                                                                                               
  rgbd_camera_info: "/zed/zed_node/left/camera_info"

  #loop_rate: rate a which to check for cancellations, Hz
  #set_map_timeout: time to wait for /set_map service from amcl before failing, seconds
  #map_topic: topic to listen to for amcl to get map, , global namespace eg "/map"
  #map_frame: fixed frame that mapping node produces odom -> base_link transfrom
  #base_link_frame: frame attached to body, tf tree should be map_frame -> odom_frame -> base_link
  #set_map_service: name of service provided by amcl to set initial pose with covariance and map occupancygrid

navigation_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0
  server_timeout: 2
  static_paths: false
  navigation_server: "move_base"
  human_detection_min_score: 0.5
  human_detection_topic: "/human_detection/detection"
  enable_human_detection_msg: "Enabled navigation with human detection"
  disable_human_detection_msg: "Disabled navigation with human detection"
  enable_best_effort_goal: true
  normal_nav_if_best_effort_unavailable: true
  best_effort_retry_timeout_sec: 30
  best_effort_retry_sleep_sec: 1

cleaning_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0 #disable
  start_distance_thresh: 100000000.0 #meters
#   #yaml_path must end with slash, is a directory
  yaml_path: "/home/movel/.config/movel/paths"
  polygon_path: "/home/movel/.config/movel/paths/"
  cropped_map_path: "/home/movel/.config/movel/paths/map_cropped.png"
  cropped_coordinates_path: "/home/movel/.config/movel/paths/map_cropped.txt"
  planning_timeout: 60.0
  move_base_package: "task_supervisor"
  move_base_launch: "noop.launch"
  radius_multiplier: 3
  planned_path_name: "coverage_path"

human_detection_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0
  human_detection_launch_package: "human_detection"
  human_detection_launch_file: "human_detection.launch"
  human_detection_start_log_msg: "Start human detection service called"
  human_detection_stop_log_msg: "Stop human detection service called"
  human_detection_start_error_msg: "Failed to launch human detection launch file"
  human_detection_stop_error_msg: "Could not stop, human detection was not started"

path_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0
  path_load_launch_package: "path_recall"
  path_load_launch_file: "path_load_segments.launch"
  human_detection_min_score: 0.5
  human_detection_topic: "/human_detection/detection"
  enable_human_detection_msg: "Enabled path loading with human detection"
  disable_human_detection_msg: "Disabled path loading  with human detection"
  teardown_timeout: 60 # [s] how long to wait before stopping launches after task completion 

pcl_slam_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0.0
  save_timeout: 10.0
  map_topic: "/map"
  pcl_slam_launch_package: "hdl_graph_slam"
  pcl_slam_launch: "hdl_graph_slam_501_wheel.launch"
  pcl_map_saver_package: "task_supervisor"
  pcl_map_saver_launch: "map_saver.launch"
  three_to_two_package: "points_preprocessor_usi"
  three_to_two_launch: "3Dto2D.launch"

pcl_localization_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0
  pcl_localization_launch_package: "movel"
  pcl_localization_launch_file: "3D_move_base.launch"
  # map_dir: "/home/movel/.config/movel/maps"
  localization_map_dir: "/home/movel/.config/movel/maps"
  navigation_map_dir: "/home/movel/.config/movel/maps/nav"
  pcl_localization_launch_nodes: "/obs_cloud_to_scan /move_base /amcl /velocity_limiter /anti_shin_buster_node /rgbd_to_base /velocity_setter_node /plan_inspector"
  #loop_rate: rate a which to check for cancellations, Hz
  #set_map_timeout: time to wait for /set_map service from amcl before failing, seconds
  #map_topic: topic to listen to for amcl to get map, , global namespace eg "/map"
  #map_frame: fixed frame that mapping node produces odom -> base_link transfrom
  #base_link_frame: frame attached to body, tf tree should be map_frame -> odom_frame -> base_link
  #set_map_service: name of service provided by amcl to set initial pose with covariance and map occupancygrid

geometric_docking_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0
  geometric_launch_package: "geometric_docking"
  geometric_launch_file: "geodock.launch"
  geometric_launch_nodes: "/geometric_docking_node /planner_adjuster"

wait_for_go_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0

automapping_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0
  automapping_launch_package: "automapping_handler"
  automapping_launch_file: "automapping.launch"

wall_inspection_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 0
  wall_inspection_launch_package: "wall_inspection"
  wall_inspection_launch_file: "wall_inspection.launch"

rtabmap_handler:
  watchdog_rate: 2.0
  watchdog_timeout: 1000.0
  mapping_launch_package: "movel"
  mapping_launch_file: "rtabmap_mapping.launch"
  camera_names: ["camera"] # up to 4 cameras

flexbe_handler:
  flexbe_timeout: 2.0
  flexbe_server: "flexbe"
  flexbe_topics_prefix: "flexbe/execute_behavior"
  enable_flexbe_logs: true

# docking:
#   watchdog_rate: 2.0
#   watchdog_timeout: 0
#   service_req: false
#   launch_req: true
#   service_start: "/client/dock/start" #required if service_req is true
#   service_start_msg: "START" #optional  if there is any particular msg needs to sent or else empty string 
#   service_stop: "/client/dock/stop" #required if service_req is true
#   service_start_msg: "STOP" #optional  if there is any particular msg needs to sent or else empty string 
#   launch_package: "yocs_velocity_smoother" #required if launch_req is true
#   launch_file: "standalone.launch"  #required if launch_req is true
#   launch_nodes: "/nodelet_manager /velocity_smoother" #required if launch_req is true
#   topic_cancel_req: true

# undocking:
#   watchdog_rate: 2.0
#   watchdog_timeout: 0
#   service_req: true
#   launch_req: true
#   service_start: "/client/dock/start" #required if service_req is true
#   service_start_msg: "START" #optional  if there is any particular msg needs to sent or else empty string 
#   service_stop: "/client/dock/stop" #required if service_req is true
#   service_start_msg: "STOP" #optional  if there is any particular msg needs to sent or else empty string 
#   launch_package: "yocs_velocity_smoother" #required if launch_req is true
#   launch_file: "standalone.launch"  #required if launch_req is true
#   launch_nodes: "/nodelet_manager /velocity_smoother" #required if launch_req is true
#   topic_cancel_req: true
