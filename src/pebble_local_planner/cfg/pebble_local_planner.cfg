#!/usr/bin/env python

PACKAGE = "pebble_local_planner"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("inner_planner", str_t, 0, "Inner planner for Pebble (must be a global planner)", "global_planner/GlobalPlanner")
gen.add("d_min", double_t, 0, "distance for plan decimation", 0.30, 0.1, 100.)
gen.add("xy_goal_tolerance", double_t, 0, "linear tolerance", 0.30, 0.0, 100.)
gen.add("yaw_goal_tolerance", double_t, 0, "angular tolerance", 0.5236, 0.0, 6.2830)
gen.add("max_vel_x", double_t, 0, "max linear velocity", 0.3, 0.0, 100.0)
gen.add("max_vel_theta", double_t, 0, "max angular velocity", 0.7854, 0.0, 31.415)
gen.add("acc_lim_x", double_t, 0, "max linear acceleration", 1.0, 0.0, 20.0)
gen.add("acc_lim_theta", double_t, 0, "max angular acceleration", 1.5708, 0.0, 31.415)
gen.add("th_turn", double_t, 0, "at what angle error to turn in place", 1.5708, 0.0, 3.1415)
gen.add("N_lookahead", int_t, 0, "how many multiple of d_min to look ahead for obstacles", 1, 1, 100)
gen.add("local_obstacle_avoidance", bool_t, 0, "do obsav (true) or rely on global planner (false)", True)
gen.add("decelerate_goal", bool_t, 0, "whether to decelerate towards end goal", False)
gen.add("decelerate_each_waypoint", bool_t, 0, "whether to decelerate at each waypoint if deceleration is enabled", False)
gen.add("decelerate_distance", double_t, 0, "distance to decelerate if decelerate end is enabled", 0.30, 0.0, 100)
gen.add("decelerate_factor", double_t, 0, "factor to decelerate at the end [speed = distance^(factor)]. 0 = no deceleration, 1 = linear deceleration, 1 > exponential deceleration", 1.00, 0.0, 2.00)
gen.add("curve_angle_tolerance", double_t, 0, "angle tolerance to detect curve in path (absolute value)", 3.00, 0.0, 3.14)
gen.add("curve_d_min", double_t, 0, "distance for plan decimation if the robot detects the curve in path. Please set less than the d_min", 0.05, 0.0, 2.0)
gen.add("curve_vel", double_t, 0, "velocity when the robot detect the curve then will slows down the robot speed", 0.1, 0.0, 0.7)
gen.add("allow_reverse", bool_t, 0, "whether to allow reverse motion", False)
gen.add("th_reverse", double_t, 0, "at what angle to reverse if allow_reverse is true", 2.3562, 1.5708, 3.1415)
gen.add("kp_linear", double_t, 0, "kp  Linear", 1.0, 0.0, 100.0)
gen.add("ki_linear", double_t, 0, "ki  Linear", 0.0, 0.0, 100.0)
gen.add("kd_linear", double_t, 0, "kd  Linear", 0.0, 0.0, 100.0)
gen.add("kp_angular", double_t, 0, "kp Angular", 1.0, 0.0, 100.0)
gen.add("ki_angular", double_t, 0, "ki Angular", 0.0, 0.0, 100.0)
gen.add("kd_angular", double_t, 0, "kd Angular", 0.0, 0.0, 100.0)

exit(gen.generate(PACKAGE, "pebble", "pebble_local_planner"))