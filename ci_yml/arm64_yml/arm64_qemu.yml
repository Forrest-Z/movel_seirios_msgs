# You can override the included template(s) by including variable overrides
# See https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#priority-of-environment-variables
stages:
  - build
  - build_docker



build_devel:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME=="devel"
  image: registry.gitlab.com/movelai/seirios_ros/${SEIRIOS_DEV_BASE}_x86:latest
  timeout: 2h
  # tags:
  #   - ros
  script:
    - export MOVEL_LICENSE=RWBBX
    - robot docker generate -r . -s . --target devel_x86
    - robot docker generate -r . -s . --target devel_arm64
  artifacts:
    when: always
    paths:
      - devel_x86_Dockerfile
      - devel_arm64_Dockerfile
  cache:
    paths:
      - build/
      - devel/
    policy: pull-push

build_docker_devel_arm64_emu:
  stage: build_docker
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME=="devel"
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      command:
        - "--registry-mirror"
        - https://registry.gitlab.com
  dependencies:
    - build_devel
  tags:
    - ros
  timeout: 12h
  script:
    - export DOCKER_BUILDKIT=1
    - export BUILDKIT_PROGRESS=plain
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - export BUILDX_URL=https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64
    - mkdir -p $HOME/.docker/cli-plugins && wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL && chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - apk update
    - apk add qemu
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --name builder --driver docker-container --use
    - docker buildx inspect --bootstrap

    - export SEIRIOS_VERSION=$(cat seirios_release.yml | grep -oh "[0-9.]*$")
    - export TAG_COMMIT_SHA=${SEIRIOS_VERSION}-${SEIRIOS_DEVEL}_arm64-${CI_COMMIT_SHA}
    - export TAG_LATEST_COMMIT=${SEIRIOS_VERSION}-${SEIRIOS_DEVEL}_arm64-latest-commit
    - export REGISTRY_IMTERIM_BUILD=${SEIRIOS_REGISTRY}interim_build
    - echo $DOCKERDTRW | docker login registry.gitlab.com/movelai --username Docker-DT-RW --password-stdin 
      && docker buildx build --push --platform linux/arm64 --build-arg NAME=registry.gitlab.com/movelai/seirios_ros/${SEIRIOS_DEV_BASE}_arm64
      --build-arg TAG=latest --tag $REGISTRY_IMTERIM_BUILD:$TAG_COMMIT_SHA --tag $REGISTRY_IMTERIM_BUILD:$TAG_LATEST_COMMIT -f devel_arm64_Dockerfile .

build_staging_arm_64_emu:
  stage: build
  rules:
    - if: '($ARM_RUNNER == "false" && $CI_PIPELINE_SOURCE == "trigger") && $TARGET_BRANCH == "staging"'
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      command:
        - "--registry-mirror"
        - https://registry.gitlab.com
  tags:
    - ros
  timeout: 12h
  script:
    - export DOCKER_BUILDKIT=1
    - export BUILDKIT_PROGRESS=plain
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - export BUILDX_URL=https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64
    - mkdir -p $HOME/.docker/cli-plugins && wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL && chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - apk update
    - apk add qemu
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker kill df-docker || true
    - docker container prune -f

    - docker run --rm --privileged -i --name df-docker -d registry.gitlab.com/movelai/seirios_ros/${SEIRIOS_DEV_BASE}_arm64:latest
    - docker cp ../seirios_ros/ df-docker:/.
    - docker exec df-docker bash -c "cd seirios_ros && mkdir debs/"
    - docker exec df-docker bash -c "cd seirios_ros && mkdir -p /tmp/movel/debs/"
    - docker exec df-docker bash -c "apt-get -y  update"
    - docker exec df-docker bash -c "cd seirios_ros && rosdep update && rosdep install --from-paths src --ignore-src -r -y "
    - docker exec df-docker bash -c "source /opt/ros/noetic/setup.bash && source /usr/share/colcon_cd/function/colcon_cd.sh && cd seirios_ros && robot package generate -r . -m bloom"
    - docker exec df-docker bash -c "cd seirios_ros && cp -r  /tmp/movel/debs/* debs/"
    - docker exec df-docker bash -c "cd seirios_ros && robot docker generate -r . -s debs/ --target staging_arm64"
    - docker exec df-docker bash -c "cd seirios_ros && robot package upload -r . --target staging_arm64 -j $CI_JOB_TOKEN"
    - docker cp df-docker:seirios_ros/debs /builds/movelai/seirios_ros/. 
    - docker cp df-docker:seirios_ros/staging_arm64_Dockerfile /builds/movelai/seirios_ros/. 
  artifacts:
    paths:
      - staging_arm64_Dockerfile
      - debs/


build_docker_staging_arm_64_emu:
  stage: build_docker
  rules:
    - if: '($ARM_RUNNER == "false" && $CI_PIPELINE_SOURCE == "trigger") && $TARGET_BRANCH == "staging"'
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      command:
        - "--registry-mirror"
        - https://registry.gitlab.com
  dependencies:
    - build_staging_arm_64_emu
  timeout: 12h
  tags:
    - ros
  script:
    - export DOCKER_BUILDKIT=1
    - export BUILDKIT_PROGRESS=plain
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - export BUILDX_URL=https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64
    - mkdir -p $HOME/.docker/cli-plugins && wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL && chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - apk update
    - apk add qemu
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --name builder --driver docker-container --use
    - docker buildx inspect --bootstrap

    - export SEIRIOS_VERSION=$(cat seirios_release.yml | grep -oh "[0-9.]*$")
    - export TAG_COMMIT_SHA=${SEIRIOS_VERSION}-${SEIRIOS_STAGING}_arm64-${CI_COMMIT_SHA}
    - export TAG_LATEST_COMMIT=${SEIRIOS_VERSION}-${SEIRIOS_STAGING}_arm64-latest-commit
    - export REGISTRY_IMTERIM_BUILD=${SEIRIOS_REGISTRY}interim_build
    - echo $DOCKERDTRW | docker login registry.gitlab.com/movelai --username Docker-DT-RW --password-stdin 
      && docker buildx build --push --platform linux/arm64 --tag $REGISTRY_IMTERIM_BUILD:$TAG_COMMIT_SHA --tag $REGISTRY_IMTERIM_BUILD:$TAG_LATEST_COMMIT -f staging_arm64_Dockerfile .

build_master_arm_64_emu:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME=="master"
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      command:
        - "--registry-mirror"
        - https://registry.gitlab.com
  tags:
    - ros
  timeout: 12h
  script:
    - export DOCKER_BUILDKIT=1
    - export BUILDKIT_PROGRESS=plain
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - export BUILDX_URL=https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64
    - mkdir -p $HOME/.docker/cli-plugins && wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL && chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - apk update
    - apk add qemu
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker kill df-docker || true
    - docker container prune -f

    - docker run --rm --privileged -i --name df-docker -d registry.gitlab.com/movelai/seirios_ros/${SEIRIOS_DEV_BASE}_arm64:latest
    - docker cp ../seirios_ros/ df-docker:/.
    - docker exec df-docker bash -c "cd seirios_ros && mkdir debs/"
    - docker exec df-docker bash -c "cd seirios_ros && mkdir -p /tmp/movel/debs/"
    - docker exec df-docker bash -c "apt-get -y  update"
    - docker exec df-docker bash -c "cd seirios_ros && rosdep update && rosdep install --from-paths src --ignore-src -r -y "
    - docker exec df-docker bash -c "source /opt/ros/noetic/setup.bash && source /usr/share/colcon_cd/function/colcon_cd.sh && cd seirios_ros && robot package generate -r . -m bloom"
    - docker exec df-docker bash -c "cd seirios_ros && cp -r  /tmp/movel/debs/* debs/"
    - docker exec df-docker bash -c "export MOVEL_LICENSE=RWBBX && cd seirios_ros && robot docker generate -r . -s debs/ --target master_arm64"
    - docker exec df-docker bash -c "cd seirios_ros && robot package upload -r . --target master_arm64 -j $CI_JOB_TOKEN"
    - docker cp df-docker:seirios_ros/debs /builds/movelai/seirios_ros/. 
    - docker cp df-docker:seirios_ros/master_arm64_Dockerfile /builds/movelai/seirios_ros/. 
  artifacts:
    paths:
      - master_arm64_Dockerfile
      - debs/


build_docker_master_arm64_emu:
  stage: build_docker
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME=="master"
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      command:
        - "--registry-mirror"
        - https://registry.gitlab.com
  dependencies:
    - build_master_arm_64_emu
  timeout: 12h
  tags:
    - ros
  script:
    - export DOCKER_BUILDKIT=1
    - export BUILDKIT_PROGRESS=plain
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - export BUILDX_URL=https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64
    - mkdir -p $HOME/.docker/cli-plugins && wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL && chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - apk update
    - apk add qemu
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --name builder --driver docker-container --use
    - docker buildx inspect --bootstrap

    - export SEIRIOS_VERSION=$(cat seirios_release.yml | grep -oh "[0-9.]*$")
    - export TAG_COMMIT_SHA=${SEIRIOS_VERSION}-${SEIRIOS_MASTER}_arm64-${CI_COMMIT_SHA}
    - export TAG_LATEST_COMMIT=${SEIRIOS_VERSION}-${SEIRIOS_MASTER}_arm64-latest-commit
    - export REGISTRY_IMTERIM_BUILD=${SEIRIOS_REGISTRY}interim_build
    - echo $DOCKERDTRW | docker login registry.gitlab.com/movelai --username Docker-DT-RW --password-stdin 
      && docker buildx build --push --platform linux/arm64 --tag $REGISTRY_IMTERIM_BUILD:$TAG_COMMIT_SHA --tag $REGISTRY_IMTERIM_BUILD:$TAG_LATEST_COMMIT -f master_arm64_Dockerfile .

