# You can override the included template(s) by including variable overrides
# See https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#priority-of-environment-variables
stages:
  - build
  - deb_push
  - deploy

build_feature_x86:
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_BRANCH =~ /^(feat|fix|refactor|ci)\/.*/'
  image: registry.gitlab.com/movelai/seirios_ros/${SEIRIOS_DEV_PLUS}_x86:latest
  timeout: 4h
  tags:
    - ros
  script:
    - ls -al
    - apt-get -y  update
    - rosdep update
    - export CUSTOM_ROS_DEP_INSTALL=$(rosdep install --reinstall --simulate --from-path src --ignore-src | awk '{print $3 }' | grep 'ros-\|python')
    - export size=${#CUSTOM_ROS_DEP_INSTALL} 
    - >
      if [ $size<10 ]; then
        echo "Some thing wrong with ros dep command, Kindly check it"
        exit 1
      fi
    - echo $CUSTOM_ROS_DEP_INSTALL > ros_dep_install.txt
    - rosdep install --from-paths src --ignore-src -r -y
    - mkdir debs/
    - mkdir -p /tmp/movel/debs/
    - rospack find rtabmap 
    - robot package generate -r . -m colcon
    - cp -r  /tmp/movel/debs/* debs/
    - ls -al debs/
    - robot docker generate -r . -s debs/ --target feature_x86
  artifacts:
    paths:
      - feature_x86_Dockerfile
      - debs/
      - ros_dep_install.txt
  retry: 2

deploy_feature_x86:
  stage: deploy
  rules:
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_BRANCH =~ /^(feat|fix|refactor|ci)\/.*/'
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      command:
        - "--registry-mirror"
        - https://registry.gitlab.com
  dependencies:
    - build_feature_x86
  timeout: 6h
  tags:
    - ros-docker
  script:
    - export SEIRIOS_VERSION=$(cat seirios_release.yml | grep -oh "[0-9.]*$")
    - export TAG_BRANCH_NAME=${CI_COMMIT_REF_SLUG}
    - export REGISTRY_FEATURE=${SEIRIOS_REGISTRY}${SEIRIOS_FEATURE}_x86
    - export CUSTOM_ROS_DEP_INSTALL=$(cat ros_dep_install.txt)
    - export line_count=$(docker image ls out_image_feature_x86:${TAG_BRANCH_NAME} | wc -l)
    - export image_count=$(($line_count-1))
    - echo $DOCKERDTRW | docker login registry.gitlab.com/movelai --username Docker-DT-RW --password-stdin
    - >
      if [[ $image_count == '0' ]]; then
        docker pull registry.gitlab.com/movelai/seirios_ros/dev_plus_x86:latest && docker build --tag out_image_feature_x86:${TAG_BRANCH_NAME} --build-arg CUSTOM_ROS_DEP_INSTALL="${CUSTOM_ROS_DEP_INSTALL}" -f feature_x86_Dockerfile .
      fi
    - docker image tag out_image_feature_x86:${TAG_BRANCH_NAME} ${REGISTRY_FEATURE}:${TAG_BRANCH_NAME}
    - docker push ${REGISTRY_FEATURE}:${TAG_BRANCH_NAME}
    - docker rmi out_image_feature_x86:${TAG_BRANCH_NAME} ${REGISTRY_FEATURE}:${TAG_BRANCH_NAME}

build_rc_x86:
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_BRANCH =~ /^release\/.*/'
  image: registry.gitlab.com/movelai/seirios_ros/${SEIRIOS_DEV_PLUS}_x86:latest
  timeout: 4h
  tags:
    - ros
  script:
    - ls -al
    - apt-get -y  update
    - rosdep update
    - export CUSTOM_ROS_DEP_INSTALL=$(rosdep install --reinstall --simulate --from-path src --ignore-src | awk '{print $3 }' | grep 'ros-\|python')
    - export size=${#CUSTOM_ROS_DEP_INSTALL} 
    - >
      if [ $size<10 ]; then
        echo "Some thing wrong with ros dep command, Kindly check it"
        exit 1
      fi
    - echo $CUSTOM_ROS_DEP_INSTALL > ros_dep_install.txt
    - rosdep install --from-paths src --ignore-src -r -y
    - mkdir debs/
    - mkdir -p /tmp/movel/debs/
    - rospack find rtabmap 
    - robot package generate -r . -m colcon
    - cp -r  /tmp/movel/debs/* debs/
    - ls -al debs/
    - robot docker generate -r . -s debs/ --target staging_x86
  artifacts:
    paths:
      - staging_x86_Dockerfile
      - debs/
      - ros_dep_install.txt
  retry: 2

deb_push_rc_x86:
  stage: deb_push
  rules:
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_BRANCH =~ /^release\/.*/'
  image: registry.gitlab.com/movelai/seirios_ros/${SEIRIOS_DEV_PLUS}_x86:latest
  timeout: 4h
  dependencies:
    - build_rc_x86
  tags:
    - ros
  script:
    - robot package upload -s debs/ -r . --target staging_x86 -j $CI_JOB_TOKEN || true

deploy_rc_x86:
  stage: deploy
  rules:
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_BRANCH =~ /^release\/.*/'
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      command:
        - "--registry-mirror"
        - https://registry.gitlab.com
  dependencies:
    - build_rc_x86
  timeout: 4h
  tags:
    - ros-docker
  script:
    - export SEIRIOS_VERSION=$(cat seirios_release.yml | grep -oh "[0-9.]*$")
    - export REGISTRY_STAGING=${SEIRIOS_REGISTRY}${SEIRIOS_STAGING}_x86
    - export CUSTOM_ROS_DEP_INSTALL=$(cat ros_dep_install.txt)
    - export line_count=$(docker image ls out_image_staging_x86:${SEIRIOS_VERSION} | wc -l)
    - export image_count=$(($line_count-1))
    - echo $DOCKERDTRW | docker login registry.gitlab.com/movelai --username Docker-DT-RW --password-stdin
    - >
      if [[ $image_count == '0' ]]; then
        docker pull registry.gitlab.com/movelai/seirios_ros/dev_plus_x86:latest && docker build --tag out_image_staging_x86:${SEIRIOS_VERSION} --build-arg CUSTOM_ROS_DEP_INSTALL="${CUSTOM_ROS_DEP_INSTALL}" -f staging_x86_Dockerfile .
      fi
    - docker image tag out_image_staging_x86:${SEIRIOS_VERSION} ${REGISTRY_STAGING}:${SEIRIOS_VERSION}
    - docker push ${REGISTRY_STAGING}:${SEIRIOS_VERSION}
    - docker image tag ${REGISTRY_STAGING}:${SEIRIOS_VERSION} ${REGISTRY_STAGING}:latest
    - docker push ${REGISTRY_STAGING}:latest
    - docker rmi out_image_staging_x86:${SEIRIOS_VERSION} ${REGISTRY_STAGING}:${SEIRIOS_VERSION} ${REGISTRY_STAGING}:latest

build_master_x86:
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_COMMIT_BRANCH == "master"'
  image: registry.gitlab.com/movelai/seirios_ros/${SEIRIOS_DEV_PLUS}_x86:latest
  timeout: 4h
  tags:
    - ros
  script:
    - export MOVEL_LICENSE=RWBBX
    - mkdir debs/
    - mkdir -p /tmp/movel/debs/
    - rosdep update
    - sudo apt-get -y  update
    - export CUSTOM_ROS_DEP_INSTALL=$(rosdep install --reinstall --simulate --from-path src --ignore-src | awk '{print $3 }' | grep 'ros-\|python')
    - export size=${#CUSTOM_ROS_DEP_INSTALL} 
    - >
      if [ $size<10 ]; then
        echo "Some thing wrong with ros dep command, Kindly check it"
        exit 1
      fi    
    - echo $CUSTOM_ROS_DEP_INSTALL > ros_dep_install.txt
    - rosdep install --from-paths src --ignore-src -r -y
    - rospack find rtabmap
    - robot package generate -r . -m colcon
    - cp -r  /tmp/movel/debs/* debs/
    - robot docker generate -r . -s debs/ --target master_x86
  artifacts:
    paths:
      - master_x86_Dockerfile
      - debs/
      - ros_dep_install.txt
  retry: 2

deb_push_master_x86:
  stage: deb_push
  rules:
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_COMMIT_BRANCH == "master"'
  image: registry.gitlab.com/movelai/seirios_ros/${SEIRIOS_DEV_PLUS}_x86:latest
  timeout: 4h
  dependencies:
    - build_master_x86
  tags:
    - ros
  script:
    - robot package upload -s debs/ -r . --target master_x86 -j $CI_JOB_TOKEN || true

deploy_master_x86:
  stage: deploy
  rules:
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline" && $CI_COMMIT_BRANCH == "master"'
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      command:
        - "--registry-mirror"
        - https://registry.gitlab.com
  dependencies:
    - build_master_x86
  timeout: 4h
  tags:
    - ros-docker
  script:
    - export SEIRIOS_VERSION=$(cat seirios_release.yml | grep -oh "[0-9.]*$")
    - export REGISTRY_MAIN=${SEIRIOS_REGISTRY}${SEIRIOS_MASTER}_x86
    - export CUSTOM_ROS_DEP_INSTALL=$(cat ros_dep_install.txt)
    - export line_count=$(docker image ls out_image_master_x86:${SEIRIOS_VERSION} | wc -l)
    - export image_count=$(($line_count-1))
    - echo $DOCKERDTRW | docker login registry.gitlab.com/movelai --username Docker-DT-RW --password-stdin
    - >
      if [[ $image_count == '0' ]]; then
        docker pull registry.gitlab.com/movelai/seirios_ros/release_plus_x86:latest && docker build --tag out_image_master_x86:${SEIRIOS_VERSION} --build-arg CUSTOM_ROS_DEP_INSTALL="${CUSTOM_ROS_DEP_INSTALL}" -f master_x86_Dockerfile .
      fi
    - docker image tag out_image_master_x86:${SEIRIOS_VERSION} ${REGISTRY_MAIN}:${SEIRIOS_VERSION}
    - docker push ${REGISTRY_MAIN}:${SEIRIOS_VERSION}
    - docker image tag ${REGISTRY_MAIN}:${SEIRIOS_VERSION} ${REGISTRY_MAIN}:latest
    - docker push ${REGISTRY_MAIN}:latest
    - docker rmi ${REGISTRY_MAIN}:${SEIRIOS_VERSION} ${REGISTRY_MAIN}:latest

    - export REGISTRY_CLIENT_DEPLOY=${SEIRIOS_DEPLOY_REGISTRY}${SEIRIOS_MASTER}_x86
    - docker login registry.gitlab.com/movelai -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD
    - docker image tag out_image_master_x86:${SEIRIOS_VERSION} ${REGISTRY_CLIENT_DEPLOY}:${SEIRIOS_VERSION}
    - docker push ${REGISTRY_CLIENT_DEPLOY}:${SEIRIOS_VERSION}
    - docker image tag ${REGISTRY_CLIENT_DEPLOY}:${SEIRIOS_VERSION} ${REGISTRY_CLIENT_DEPLOY}:latest
    - docker push ${REGISTRY_CLIENT_DEPLOY}:latest
    - docker rmi out_image_master_x86:${SEIRIOS_VERSION} ${REGISTRY_CLIENT_DEPLOY}:${SEIRIOS_VERSION} ${REGISTRY_CLIENT_DEPLOY}:latest